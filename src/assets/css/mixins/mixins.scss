@charset "UTF-8";
/**
 * @doc mixin
 * @author Heanes
 * @time 2019-04-13 19:20:27 周六
 */
@import "../common/var.scss";
@import "./config.scss";

/**
 * @doc 响应式断点
 * @author Heanes
 * @time 2019-04-13 18:25:12 周六
 */
@mixin res($key, $map: $--breakpoints) {
  // 循环断点Map，如果存在则返回
  @if map-has-key($map, $key) {
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  } @else {
    @warn "Undefeined points: `#{$map}`";
  }
}

/* ****************************** BEM ****************************** */
// 区块
@mixin b($block) {
  $B: $namespace + '-' + $block !global;

  .#{$B} {
    @content;
  }
}

// 元素
@mixin e($element) {
  $currentSelector: & + $element-separator + $element;

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

/// 修饰符，todo 支持多个修饰符列表
@mixin m($modifier) {
  $currentSelector: & + $modifier-separator + $modifier;

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

/* ****************************** 状态修饰 ****************************** */
@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}
